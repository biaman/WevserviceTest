<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Visionscape.Communications</name>
    </assembly>
    <members>
        <member name="T:Visionscape.Communications.ReportQueueSummary">
            <summary>
            Contains data that summarizes the current state of a Part Queue
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueSummary.IsOn">
            <summary>
            True if the PartQueue is turned on for this inspection
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueSummary.MaxEntries">
            <summary>
            Maximum number of reports that the Queue can contain
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueSummary.CurrentEntries">
            <summary>
            Current number of reports contained within the Queue
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportQueueConnection">
            <summary>
            Provides functionality that allows the Queue of cycle data in an inspection to be uploaded.
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.Connect(Visionscape.Devices.VsDevice,System.Int32)">
            <summary>
            Connects to the specified inspection index on the specified device.
            </summary>
            <param name="dev">The device to connect to</param>
            <param name="InspIndex">The 1 based index of the inspection to connect to</param>
            <returns>true if the connection was succesful, false if not</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.Disconnect">
            <summary>
            Disconnects from the device
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.RecordGetAll">
            <summary>
            Causes all records in the Queue to be uploaded and returned in a list.
            The Queue will be emptied after this call is complete.
            </summary>
            <returns>An InspectionReportList that contains an InspectionReport object for every Queue entry</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.Summary">
            <summary>
            Uploads a summary of the current state of the Queue
            </summary>
            <returns>A ReportQueueSummary object that contains all summary information</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.RecordGetAt(System.Int32)">
            <summary>
            Retrieves an individual record from the Queue at the specified index,
            or with the specified cycle count.
            The record is NOT removed from the queue.
            </summary>
            <param name="indexOrCycleCount">If >= 0, this specifies the index of the entry in the Queue. If less than 0, this specifies the desired cycle count </param>
            <returns>An InspectionReport representing the uploaded Queue record</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.RecordClearAll">
            <summary>
            Clears the queue without uploading anything
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportQueueConnection.RecordGetRange(System.Int32,System.Int32)">
            <summary>
            Uploads a range of records from the Queue.  The records are removed after upload.
            </summary>
            <param name="first">specifies the 0 based index of the first record in the range</param>
            <param name="last">specifies the 0 based index of the last record in the range</param>
            <returns>An InspectionReportList that holds all of the uploaded records</returns>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueConnection.Connected">
            <summary>
            Returns true if currently connected
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueConnection.Device">
            <summary>
            Returns a reference to the device that the object is connected to. null if not connected.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportQueueConnection.InspIndex">
            <summary>
            Returns the index of the inspection that the object is connected to.  -1 if not connected.
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportConnection">
            <summary>
            Establishes a connection to one inspection on a Device, so that inspection cycle reports may be received.
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(Visionscape.Devices.VsDevice,System.Int32,Visionscape.Communications.ReportConnection.ConnectOptions)">
            <summary>
            Establishes a connection to the specified inspection on the specified device.
            Once connected, you will receive the NewReport event when ever the specified 
            inspection sends one.
            </summary>
            <param name="device">The Device to connect to</param>
            <param name="inspIndex">The 1 based index of the inspection to receive reports from</param>
            <param name="reportOptions">Options that control the type of data to be included in the report</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(Visionscape.Devices.VsDevice,System.Int32)">
            <summary>
            Establishes a connection to the specified inspection on the specified device.
            This version defaults the connection options to ConnectOptions.Default
            </summary>
            <param name="device">The Device to connect to</param>
            <param name="inspIndex">The inspection to receive reports from</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(Visionscape.Devices.VsDevice)">
            <summary>
            Establishes a connection to the first inspection on the specified device.
            This version defaults the connection options to ConnectOptions.Default
            </summary>
            <param name="device">The Device to connect to</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(System.String)">
            <summary>
            Establishes a connection to the first inspection on the specified device.
            This version defaults the connection options to ConnectOptions.Default
            </summary>
            <param name="deviceName">The name of the Device to connect to</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(System.String,System.Int32)">
            <summary>
            Establishes a connection to the specified inspection on the specified device.
            This version defaults the connection options to ConnectOptions.Default
            </summary>
            <param name="deviceName">The Device to connect to</param>
            <param name="inspIndex">The inspection to receive reports from</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Connect(System.String,System.Int32,Visionscape.Communications.ReportConnection.ConnectOptions)">
            <summary>
            Establishes a connection to the specified inspection on the specified device.
            Once connected, you will receive the OnNewReport event when ever the specified 
            inspection completes a cycle.
            </summary>
            <param name="deviceName">The Device to connect to</param>
            <param name="inspIndex">The inspection to receive reports from</param>
            <param name="reportOptions">Options that control the type of data to be included in the report</param>
            <returns>true if the connection was successfully established, false otherwise</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.DataRecordAdd(System.String)">
            <summary>
            Adds a datum to the report, as specified by the dataRecordPath param.
            You must be connected before calling this method.
            </summary>
            <param name="dataRecordPath">The complete path to the datum. e.g. "Snapshot2.EdgeFast1.EdgePt";</param>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.DataRecordAdd(Visionscape.Steps.IDatum)">
            <summary>
            Adds the specified datum to the report.  You must be connected before calling this method.
            </summary>
            <param name="datumToAdd">The Datum to add to the report</param>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.DataRecordAdd(Visionscape.Devices.VsNameNode,System.String)">
            <summary>
            Adds a datum to report.  Use this method when you do not have the job loaded locally.
             You specify the step using a VsNameNode object, and a string to represent it's datum
            You must be connected before calling this method.
            </summary>
            <param name="nnForStep">A VsNameNode that represents the Step with a Datum value that you want to add to the report</param>
            <param name="DatumName">The name of the datum to add</param>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.Disconnect">
            <summary>
            Disconnects the object
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.BuildPath(Visionscape.Steps.IDatum)">
            <summary>
            Builds a parent path string that can be used with the DataRecordAdd method
            </summary>
            <param name="datum">The datum you want to build the path for</param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.BuildPath(Visionscape.Devices.VsNameNode,System.String)">
            <summary>
            Builds a parent path string that can be used with the DataRecordAdd method
            </summary>
            <param name="nnDatum">A VsNameNode object that represents the datum you want to build the path for</param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.AddSnapBuffers(Visionscape.Devices.VsNameNode)">
            <summary>
            Scans the specified device namespace and adds all snapshot buffers to the report for the inspection you are currently connected to.
            You must be connected first before calling this method.
            You must also have called VsDevice.QueryNamespace at some point before calling this method  
            </summary>
            <param name="devNamespace">Reference to the device's Namespace property</param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.AddSnapBuffers(Visionscape.Steps.JobStep)">
            <summary>
            Scans the Job for the Inspection you are currently connected to, then
             adds all of the child snapshot output buffers to the report. 
            You must successfully connect before calling this function.
            </summary>
            <param name="job">Reference to the currently loaded Job Step</param>
            <returns>The number of buffers added</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.AddSnapBuffers(Visionscape.Steps.InspectionStep)">
            <summary>
            Scans the specified Inspection step, and adds the output buffers of all 
             child snapshot steps to the report.
            </summary>
            <param name="inspection"></param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.AddSnapBuffer(Visionscape.Steps.SnapshotStep)">
            <summary>
            Adds the output buffer of the specified Snapshot to the report
            </summary>
            <param name="snapshot"></param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.LogStart(System.String,Visionscape.Communications.ReportLogOptions)">
            <summary>
            Starts logging results, as text, to the specified file path.
            You must call this AFTER you have connected
            </summary>
            <param name="strFilePath">path and file name where result text should be saved</param>
            <param name="logOptions">Specifies options that control how the results are formatted and saved in the file</param>
            <returns>true if able to start logging, false if not</returns>
        </member>
        <member name="M:Visionscape.Communications.ReportConnection.LogStop">
            <summary>
            Stops logging results to file and closes the log file
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.IsConnected">
            <summary>
            Returns true if currently connected
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.DropWhenBusy">
            <summary>
            When true, reports will be dropped by the Inspection if it is too busy to send them.
            When false, your inspection will block and wait until you are ready to receive the report.
            So set to false if you must receive every report, set to true if you don't want to impact your inspection's process time.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.FreezeMode">
            <summary>
            Gets/Sets the options that determine when reports should be frozen
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.GraphicsOn">
            <summary>
            Gets/Sets the option that determines if images contain graphics
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.MaxRate">
            <summary>
            Gets/Sets the maximum rate at which reports should be set.  
            This is specified as reports per second.  
            e.g. set to 2 for 2 reports per second, meaning a report will be sent no more often than 1 every 500ms
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.ExcludeTaggedImages">
            <summary>
            If true, images that were tagged for upload will be excluded from the report.
              These are images that the user selected for upload in the AVP file, these would
               normally be added to the Images collection automatically, but you can choose to igore them.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportConnection.IsLogging">
            <summary>
            Returns true if currently logging results
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportValueBase">
            <summary>
            Base class for specific report values
            provides the Check() method to ensure correct type
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportValueBase.Check">
            <summary>
            Checks against the type string. Throws WrongTypeException if check fails.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportAngle.Angle">
            <summary>
            Returns the Angle value as a double
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportArea.Area">
            <summary>
            Returns the Area value as a double
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDistance.Dist">
            <summary>
            Returns the Area value as a double
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportPoint.X">
            <summary>
            Returns the X value of the Point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportPoint.Y">
            <summary>
            Returns the Y value of the Point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportPoint.Angle">
            <summary>
            Returns the Angle value of the Point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportPoint.Scale">
            <summary>
            Returns the Scale value of the Point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLine.A">
            <summary>
            Returns the A component of the Ax + By + C = 0 line equation
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLine.B">
            <summary>
            Returns the B component of the Ax + By + C = 0 line equation
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLine.C">
            <summary>
            Returns the C component of the Ax + By + C = 0 line equation
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Color">
            <summary>
            0 = foreground blob, -1 = hole or background blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.AreaPixNoHoles">
            <summary>
            Area in pixels excluding holes
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.TotalAreaPix">
            <summary>
            area in pixels, including holes
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.NumHoles">
            <summary>
            Number of holes inside of this blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.LeftX">
            <summary>
            X value of the left extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.LeftY">
            <summary>
            Y value of the Left extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.RightX">
            <summary>
            X value of the Right extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.RightY">
            <summary>
            Y value of the Right extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.TopX">
            <summary>
            X value of the Top extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.TopY">
            <summary>
            Y value of the Top extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.BotX">
            <summary>
            X value of the bottom extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.BotY">
            <summary>
            Y value of the bottom extent of the blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.XPerimLen">
            <summary>
            x perimeter length in pixels
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.YPerimLen">
            <summary>
            y perimeter length in pixels
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.SigX">
            <summary>
            1st moment of area in x
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.SigY">
            <summary>
            1st moment of area in y
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.SigXX">
            <summary>
            2nd moment of area in x
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.SigXY">
            <summary>
            2nd moment of area in xy
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.SigYY">
            <summary>
            2nd moment of area in y
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.AreaPix">
            <summary>
            area in pixels
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.XCenter">
            <summary>
            subpixel x center of area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.YCenter">
            <summary>
            subpixel y center of area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinorAxisLen">
            <summary>
            equivalent ellipse minor axis length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MajorAxisLen">
            <summary>
            equivalent ellipse major axis length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Ang90">
            <summary>
            major axis angle in radians from horizontal (+/- 90 degrees)
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Ang180">
            <summary>
            major axis angle in radians from horizontal (+/- 180 degrees)
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.PerimLen">
            <summary>
            blob perimeter length including change in direction correction
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.TotalArea">
            <summary>
            area including holes
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.AreaRatio">
            <summary>
            ratio of area to area of search region (ROI)
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinRadius">
            <summary>
            minimum distance from center to perimeter of blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MaxRadius">
            <summary>
            maximum distance from center to perimeter of blob
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinRadAng">
            <summary>
            angle of radius of minimum distance perimeter point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MaxAngRad">
            <summary>
            angle of radius of maximum distance perimeter point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.AvgRadius">
            <summary>
            average distance form center to perimeter points
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Length">
            <summary>
            Length of blob along major axis
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Width">
            <summary>
            Length of blob along minor axis
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.HoleArea">
            <summary>
            area of all the holes
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Visionscape.Communications.ReportBlob.HoleAreaRatio" -->
        <member name="P:Visionscape.Communications.ReportBlob.AxisRatio">
            <summary>
            ratio of minor axis length to major axis length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.PerimInvar">
            <summary>
            perimeter invariant, calculated as perimeter squared over total area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.RadRatio">
            <summary>
            ratio of minimum radius to maximum radius
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.LenWidRatio">
            <summary>
            ratio of width to length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.UnrotWidth">
            <summary>
            horizontal extent, i.e. right - left
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.UnrotHeight">
            <summary>
            vertical extent, i.e. bottom - top
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.BoxArea">
            <summary>
            area in pixels of bounding (Extent) Box.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.BoxAreaRatio">
            <summary>
            ratio of total area to box area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.CentDist">
            <summary>
            distance between center point and origin (top left corner of buffer)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Visionscape.Communications.ReportBlob.Roundness" -->
        <member name="P:Visionscape.Communications.ReportBlob.AngRange">
            <summary>
            Angle range in radians (+/- 180 degrees)
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.X3Sign">
            <summary>
            Assymetry along major axis, distance between center of rotated enclosing box and center of area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.Y3Sign">
            <summary>
            Assymetry along minor axis, distance between center of rotated enclosing box and center of area
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.ParentIndex">
            <summary>
            parent blob as an index (integer) into stl vector output
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.GrayAvg">
            <summary>
            gray average of blob.  Not applicable when running on ASIC.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.GraySum">
            <summary>
            gray sumation of blob, swBlob only
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinX">
            <summary>
            x coordinate of minimum distance perimeter point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinY">
            <summary>
            y coordinate of minimum distance perimeter point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MaxX">
            <summary>
             x coordinate of maximum distance perimeter point
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MaxY">
            <summary>
            y coordinate of maximum distance perimeter point 
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinorAxisA">
            <summary>
            a coeficient of ellipse minor axis length 
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinorAxisB">
            <summary>
            b coeficient of ellipse minor axis length 
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MinorAxisC">
            <summary>
            c coeficient of ellipse minor axis length 
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MajorAxisA">
            <summary>
            a coeficient of ellipse major axis length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MajorAxisB">
            <summary>
            b coeficient of ellipse major axis length
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlob.MajorAxisC">
            <summary>
            c coeficient of ellipse major axis length
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportBlobTree">
            <summary>
            Object to wrap the uploaded result data returned from a Blob tree
            </summary>
        </member>
        <member name="M:Visionscape.Communications.ReportBlobTree.GetBlob(System.Int32)">
            <summary>
            Returns a ReportBlob object for the blob at the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Visionscape.Communications.ReportBlobTree.NumBlobs">
            <summary>
            Number of blobs in the blob tree
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportBlobTree.NumBlobElements">
            <summary>
            Number of data elements provided for each blob. This is determined by the "Calculations to Perform" setting in the Blob Step.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.DecodeString">
            <summary>
            The string encoded in the matrix
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.SymbolRows">
            <summary>
            Number of rows in the matrix
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.SymbolCols">
            <summary>
            Number of columns in the matrix
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.SymbolAngle">
            <summary>
            The angle of the matrix in the image
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.SymbolHeight">
            <summary>
            Height of the matrix in pixels
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.SymbolWidth">
            <summary>
            Width of the matrix in pixels
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportDMR.Corner">
            <summary>
            Array holding the corner points of the matrix
            </summary>
        </member>
        <member name="T:Visionscape.Communications.InspectionReportValue">
            <summary>
            Represents a single uploaded result in the InspectionReport.
             The data may be of any type, both scalar and array.
            </summary>
        </member>
        <member name="M:Visionscape.Communications.InspectionReportValue.GetValue">
            <summary>
            Returns the data as an object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Calibrated">
            <summary>
            Set to true if you want all values returned in calibrated units
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Error">
            <summary>
            The error code attached to this value. 0 = no error.
             A non-zero value generally means that the Step producing this value did not run successfully, and the data can not be trusted.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.As1DDoubleArray">
            <summary>
            Returns the result data as a 1D array of doubles. null if the result is not an array.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.As2DDoubleArray">
            <summary>
            Returns the result data a 2 dimensional array of doubles.
            null is returned if the data is not a 2 dimensional array.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsBlobTree">
            <summary>
            Returns the result data in the form of a ReportBlobTree object.
            A WrongTrypeException is thrown if the result is not of type "BlobTree".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsAngle">
            <summary>
            Returns the result data in the form of a ReportAngle object.
            A WrongTrypeException is thrown if the result is not of type "Angle".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsArea">
            <summary>
            Returns the result data in the form of a ReportArea object.
            A WrongTrypeException is thrown if the result is not of type "Area".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsBool">
            <summary>
            Returns the result data as a bool.
             A WrongTrypeException is thrown if the result can not be cast as a bool.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsDistance">
            <summary>
            Returns the result data in the form of a ReportDistance object.
             A WrongTrypeException is thrown if the result is not of type "Distance".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsDouble">
            <summary>
            Returns the result data as a double
            A WrongTrypeException is thrown if the result can not be cast as a double.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsInt">
            <summary>
            Returns the result data as an integer.
            A WrongTrypeException is thrown if the result can not be cast as an integer.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsLine">
            <summary>
            Returns the result data in the form of a ReportLine object.
            A WrongTrypeException is thrown if the result is not of type "Line".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsObject">
            <summary>
            Returns the result data as an object reference
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsParabola">
            <summary>
            Returns the result data in the form of a ReportParabola object.
            A WrongTrypeException is thrown if the result is not of type "Parabola".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsPoint">
            <summary>
            Returns the result data in the form of a ReportPoint object.
            A WrongTrypeException is thrown if the result is not of type "Point".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsRect">
            <summary>
            Returns the result data in the form of a ReportRect object
            A WrongTrypeException is thrown if the result is not of type "Rect".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsString">
            <summary>
            Returns the result data in the form of a string.
            A WrongTrypeException is thrown if the result can not be cast as a string
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsDMRResults">
            <summary>
            Returns the result data as an array of ReportDmr objects
            A WrongTrypeException is thrown if the result is not of type "DMRResults".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.AsBCRResults">
            <summary>
            Returns the result data as an array of ReportBCR objects
            A WrongTrypeException is thrown if the result is not of type "DMRResults".
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Is1DArray">
            <summary>
            Returns true if the result data is represented by a 1 dimensional array
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.IsEmpty">
            <summary>
            Return true if the embedded value is null, false otherwise.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Is2DArray">
            <summary>
            Returns true if the result data is represented by a 2 dimensional array
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Type">
            <summary>
            A string that identifies the type of Datum that produced this result.
            This is returned in the short form. So "Point", not "Datum.Point.1"
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.Name">
            <summary>
            The user name of the Step and Datum that produced this result
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportValue.NameSym">
            <summary>
            The symbolic name of the Step and Datum that produced this result
            </summary>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.#ctor">
            <summary>
            Creates an empty InspectionReport
            </summary>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.#ctor(Visionscape.Steps.InspectionStep)">
            <summary>
            Builds an inspection report for the specified inspection step
            </summary>
            <param name="inspStep"></param>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.FileLoad(System.String)">
            <summary>
            Initializes the object using the specified file.  
            The file must have been created using the FileSave method.
            </summary>
            <param name="bszName"></param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.FileSave(System.String)">
            <summary>
            Saves the contents of this object to a file.
            The file can be reloaded using the FileLoad method.
            </summary>
            <param name="bszName"></param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.ReportString(Visionscape.Communications.ReportLogOptions)">
            <summary>
            Generates a formatted string that represents all of the report data.
              This string can then be saved to file, sent out a serial or TCP/IP port, etc.
            </summary>
            <param name="logOptions">Specifies the options that will be used to format the string</param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.GetResults(System.String)">
            <summary>
            Allows you to iterate through only results of a certain type
            </summary>
            <param name="typeString">The type of datum, specified as "Datum.Int", or "Datum.Point", etc</param>
            <returns>An InspectionReportValue object</returns>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.RawDataGet">
            <summary>
            Breaks the report down into an array of bytes.  
            This can be reconstituted into an Inspection report object via the RawDataSet function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.InspectionReport.RawDataSet(System.Byte[])">
            <summary>
            Reconstructs this report obejct from an array of bytes from the RawDataGet function.
            </summary>
            <param name="reportData"></param>
            <returns></returns>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Images">
            <summary>
            A list of all images included in the report. Represented as BufferDm objects
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.InspectionStats">
            <summary>
            Returns an object that holds the inspection stats
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Memory">
            <summary>
            Returns an object that holds information on the current memory usage
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Results">
            <summary>
            A list of all of the results contained in the report.
            These are the results that were tagged for upload in the inspection, or added 
            to the report via the DataRecordAdd method.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Index">
            <summary>
            The index of the inspection this object is currently connected to.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Name">
            <summary>
            The name of the inpsection step this object is currenlty connected to.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.NameSym">
            <summary>
            Symbolic name of the inspection step this object is currently connected to.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.TimeStamp">
            <summary>
            Time stamp of when the report was generated
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.Tag">
            <summary>
            Allows you to attach any object to this instance of the InspectionReport
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReport.TagData">
            <summary>
            Allows you to "Tag" this object with an integer value
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLogOptions.LogPrefix">
            <summary>
            Configures the data that should be logged at the begining of each cycle
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLogOptions.LogSaveMode">
            <summary>
            Gets/Sets the option that determines when data is logged to file
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLogOptions.LogSuffix">
            <summary>
            Configures the data that should be logged at the end of each cycle
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportLogOptions.LogTermination">
            <summary>
            Gets/Sets the option that determines when the terminator character is appended to the data
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportLogOptions.LogSaveModeOptions">
            <summary>
            Controls when data should be logged to file
            </summary>
        </member>
        <member name="T:Visionscape.Communications.ReportLogOptions.LogTerminateOptions">
            <summary>
            Determines when the terminator character(s) should be appended
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.Available">
            <summary>
            Amount of available memory on the device
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.Contiguous">
            <summary>
            Largest block of contiguous memory on the device
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.Frags">
            <summary>
            Number of memory fragments
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.Size">
            <summary>
            Total amount of memory
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.Used">
            <summary>
            Amount of memory currently being used
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.UsedMax">
            <summary>
            Largest amount of memory that has been in use so far
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.AvailableCoProcessor">
            <summary>
            Amount of available memory for the CoProcessor on the device.  Will be 0 if the device does not use a coprocessor
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.ContiguousCoProcessor">
            <summary>
            Largest block of contiguous memory for the CoProcessor on the device.  Will be 0 if the device does not use a coprocessor
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportMemoryInfo.FragsCoProcessor">
            <summary>
            Number of memory fragments in the CoProcessor memory of the device.  Will be 0 if the device does not use a coprocessor
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.EmbeddedInspReport">
            <summary>
            Provides access to the embedded AvpInspReport object
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.CycleCount">
            <summary>
            Total number of inspection cycles run so far
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.CycleTime">
            <summary>
            Time in milliseconds since the start of the last cycle
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.CycleTimeMax">
            <summary>
            Worst case cycle time seen so far
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.DrawTime">
            <summary>
            Time the inspection spent drawing graphics
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.FailedCount">
            <summary>
            Total number of inspection cycles that failed
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.IdleTime">
            <summary>
            Time during the cycle that the inspection was idle
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.PartQueueSize">
            <summary>
            Current number of records in the Part Queue
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.PartQueueSizeMax">
            <summary>
            Maximum number of records that can be held in the Part Queue
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.Passed">
            <summary>
            True if this cycle passed, false if it failed
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.PassedCount">
            <summary>
            Total number of inspection cycles that passed
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.ProcessTime">
            <summary>
            Time the inspection spent processing the image. Does not include acquisition or draw time.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.ProcessTimeMax">
            <summary>
            Worst case ProcessTime seen so far
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.RatePPM">
            <summary>
            The cycle time epressed as parts per minute
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.RatePPMMax">
            <summary>
            The worst case parts per minute rate seen so far
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportInspectionStats.Snapshot">
            <summary>
            An array of information on each snapshot in the inspection.
            Overrun and buffer usage information is stored here for each snapshot.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.Index">
            <summary>
            The index of the snapshot
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.BufferPoolCount">
            <summary>
            Size of the buffer pool for this snapshot
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.BufferPoolUsed">
            <summary>
            Number of buffers that are currently in use
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.CameraTimeouts">
            <summary>
            The number of camera timeout errors seen on this snapshot
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.FifoOverruns">
            <summary>
            The number of Fifo Overrun errors seen on this snapshot
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.ProcessOverruns">
            <summary>
            The number of Process Overrun errors seen on this snapshot
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportSnapshotInfo.TriggerOverruns">
            <summary>
            The number of Trigger Overrun erros seen on this snapshot
            </summary>
        </member>
        <member name="T:Visionscape.Communications.InspectionReportList">
            <summary>
            Holds a list of InspectionReport objects
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportList.Count">
            <summary>
            The number of InspectionReport objects in the list
            </summary>
        </member>
        <member name="P:Visionscape.Communications.InspectionReportList.Item(System.Int32)">
            <summary>
            Provides access to the InspectionReport at the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Visionscape.Communications.IOConnection">
            <summary>
            Allows the getting and setting of IO values on a specifed device.
            Also provides events notifying you of IO transitions.
            </summary>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.Connect(Visionscape.Devices.VsDevice)">
            <summary>
            Connects this object to the specified VsDevice object.  
             IO can not be manipulated until after you have successfully connected.
            </summary>
            <param name="dev"></param>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.Disconnect">
            <summary>
            Disconnects from the current Visionscape Device
            </summary>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.IsConnected">
            <summary>
            Returns true if currently connected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.PointWrite(System.Int32,System.Boolean)">
            <summary>
            Turns the specified Virtual IO point either on or off
            </summary>
            <param name="ioNum">0 based index of the io point</param>
            <param name="bOn">if true, IO point is turned on, if false it is turned off</param>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.PointWrite(Visionscape.Steps.VsIoType,System.Int32,System.Boolean)">
            <summary>
            Turns the specified IO point either on or off
            </summary>
            <param name="ioType">The type of IO to be set</param>
            <param name="ioNum">0 based index of the IO point</param>
            <param name="bOn">if true, IO point if turned on, if false, it is turned off</param>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.PointRead(System.Int32)">
            <summary>
            Reads the current state of the specified virtual IO point
            </summary>
            <param name="ioNum">0 based index of the virtual IO point to be read</param>
            <returns>true if the IO point is on, false if off</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.PointRead(Visionscape.Steps.VsIoType,System.Int32)">
            <summary>
            Reads the current state of the specified IO point
            </summary>
            <param name="ioType">The type of IO to read</param>
            <param name="ioNum">0 based index of the IO point</param>
            <returns>true if the IO point is on, false if off</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.BlockRead(System.Int32,System.Int32)">
            <summary>
            Reads the current state of a range of virtual IO points
            </summary>
            <param name="ioNum">0 based index of the first virutal IO point</param>
            <param name="ioCount">Number of IO points to read</param>
            <returns>An array of boolean values, one entry for every IO point in the specified range</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.BlockRead(Visionscape.Steps.VsIoType,System.Int32,System.Int32)">
            <summary>
            Reads the current state of a range of IO points
            </summary>
            <param name="ioType">The type of IO to read</param>
            <param name="ioNum">0 based index of the first IO point</param>
            <param name="ioCount">Number of IO points to read</param>
            <returns>An array of boolean values, one entry for every IO point in the specified range</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.BlockWrite(System.Int32,System.Boolean[])">
            <summary>
            Sets the state of a range of Virtual IO points
            </summary>
            <param name="ioNum">0 based index of the first virtual IO point in the range</param>
            <param name="boolArray">an array of boolean values that holds the state to write to each IO point</param>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.BlockWrite(Visionscape.Steps.VsIoType,System.Int32,System.Boolean[])">
            <summary>
            Sets the state of a range of IO points
            </summary>
            <param name="ioType">The type of IO to set</param>
            <param name="ioNum">0 based index of the first IO point in the range</param>
            <param name="boolArray">an array of boolean values that holds the state to write to each IO point</param>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.StartTrigger(System.Int32,System.Int32)">
            <summary>
            Starts pulsing the specified Virtual IO point at the specified interval.
            Multiple trigger pulses may be started simultaneously, up to 4.
            </summary>
            <param name="ioNum">0 based index of the Virtual IO point to pulse</param>
            <param name="pulseInterval">time in milliseconds between pulses</param>
            <returns>the id that identifies this trigger.  pass this value to StopTimer</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.StartTrigger(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Starts pulsing the specified Virtual IO point at the specified interval.
            Each pulse lasts for the specified pulseWidth time, and pulses either low to hight or high to low.
            Multiple trigger pulses may be started simultaneously, up to 4.
            </summary>
            <param name="ioNum">0 based index of the virtual IO point to pulse</param>
            <param name="pulseInterval">time in milliseconds between pulses</param>
            <param name="pulseWidth">time in milliseconds that the pulse should stay on</param>
            <param name="pulseLowToHigh">if true, pulse is low to high (off to on), if false, pulse is high to low</param>
            <returns>the id that identifies this trigger. pass this value to StopTimer</returns>
        </member>
        <member name="M:Visionscape.Communications.IOConnection.StopTrigger(System.Int32)">
            <summary>
            Stops the trigger pulse as identified by the idTimer value
            </summary>
            <param name="idTimer">integer value that identifies the trigger.  This is the value returned by StartTriger()</param>
        </member>
        <member name="T:Visionscape.Communications.ReportResultList">
            <summary>
            Holds a list of InspectionReportValue objects.
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportResultList.Count">
            <summary>
            returns the number of entries in the list
            </summary>
        </member>
        <member name="P:Visionscape.Communications.ReportResultList.Item(System.Int32)">
            <summary>
            Returns the InspectionReportValue at the specified index in the list.
            </summary>
            <param name="index">0 based index into the results list</param>
            <returns></returns>
        </member>
    </members>
</doc>
